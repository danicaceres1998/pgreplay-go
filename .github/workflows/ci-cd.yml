# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: "CI & CD Pipeline"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20.0'
        cache-dependency-path: |
             **/go.sum
             **/go.sum
    - name: Install Dependencies
      run: go mod download
    - name: Install Postgres
      run: apt-get install -y make postgresql-client libpq-dev
    - name: Create Test Database
      run: make recreatedb
    - name: Run Test
      run: ginkgo -race -r
  
  release:
    if: github.ref_name == 'main'
    needs: [test]
    name: "Build and release"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Docker image build & push  
      - name: Docker Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Git short sha
        id: git_context
        run: |
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile \
            -t danicaceres1998/pgreplay-go:${{ steps.git_context.outputs.short_sha }} \
            -t danicaceres1998/pgreplay-go:latest
          docker push danicaceres1998/pgreplay-go --all-tags
